BITS 64
DEFAULT REL

%macro ConstructShim 1
%if %1 > 5
    %error "At Most 5 Args Supported."
%endif
    push rsi
    push rbx
    sub rsp, 0x28
    pushfq
    cli
    pop rsi
    push rax
    mov rbx, cr0
    mov rax, rbx
    and rax, 0xfffffffffffeffff
    mov cr0, rax
%if %1 > 4
    mov rax, qword [rsp+0x68]
    mov qword [rsp+0x28], rax
%endif
    pop rax
    call rax
    add rsp, 0x28
    test ebx, 0x10000
    je .SKIP_RESTORE_WP
    mov cr0, rbx
.SKIP_RESTORE_WP:
    pop rbx
    test si, 0x200
    pop rsi
    je .SKIP_RESTORE_INTR
    sti
.SKIP_RESTORE_INTR:
    ret
%endmacro

SECTION .text

ALIGN 8 ; to align the dqs

global _gRTShimsDataStart
_gRTShimsDataStart:

global _RTShimSetVariable
_RTShimSetVariable:
    mov rax, qword [_gSetVariable]
    jmp short FiveArgsShim

global _RTShimGetVariable
_RTShimGetVariable:
    ; Until boot.efi virtualizes the pointers we use a custom wrapper.
    mov rax, qword [_gGetVariableBoot]
    test rax, rax
    jnz .USE_CURRENT_FUNC
    mov rax, qword [_gGetVariable]
.USE_CURRENT_FUNC:
    ;jmp short FiveArgsShim
    ; fall through to FiveArgsShim

FiveArgsShim:
    ConstructShim 5

global _RTShimGetNextVariableName
_RTShimGetNextVariableName:
    mov rax, qword [_gGetNextVariableName]
    jmp short FourArgsShim

global _RTShimGetTime
_RTShimGetTime:
    mov rax, qword [_gGetTime]
    jmp short FourArgsShim

global _RTShimSetTime
_RTShimSetTime:
    mov rax, qword [_gSetTime]
    jmp short FourArgsShim

global _RTShimGetWakeupTime
_RTShimGetWakeupTime:
    mov rax, qword [_gGetWakeupTime]
    jmp short FourArgsShim

global _RTShimSetWakeupTime
_RTShimSetWakeupTime:
    mov rax, qword [_gSetWakeupTime]
    jmp short FourArgsShim

global _RTShimGetNextHighMonoCount
_RTShimGetNextHighMonoCount:
    mov rax, qword [_gGetNextHighMonoCount]
    jmp short FourArgsShim

global _RTShimResetSystem
_RTShimResetSystem:
    mov rax, qword [_gResetSystem] ; Note - doesn't return!
    ;jmp short FourArgsShim
    ; fall through to FourArgsShim

FourArgsShim:
    ConstructShim 4

ALIGN 8

global _gGetNextVariableName
_gGetNextVariableName: dq 0

global _gGetVariable
_gGetVariable: dq 0

global _gSetVariable
_gSetVariable: dq 0

global _gGetTime
_gGetTime: dq 0

global _gSetTime
_gSetTime: dq 0

global _gGetWakeupTime
_gGetWakeupTime: dq 0

global _gSetWakeupTime
_gSetWakeupTime: dq 0

global _gGetNextHighMonoCount
_gGetNextHighMonoCount: dq 0

global _gResetSystem
_gResetSystem: dq 0

global _gGetVariableBoot
_gGetVariableBoot: dq 0

global _gRTShimsDataEnd
_gRTShimsDataEnd:
