## @file
#
# Driver for dumping boot loader UEFI calls.
#
# By dmazar, 26/09/2012
#
# Feel free to use it, debug it, extend it, but please report back changes/additions to
# http://www.projectosx.com/
#
# How to use:
#
#  Users of Clover boot manager can just place the driver to appropriate drivers folder
#  (for example /EFI/CLOVER/drivers64). Other users will probably know how to load it.
#
# How it works:
#
#  Driver overrides gBS->StartImage() in order to be able to detect boot loader starting (DumpUefiCalls.c).
#
#  When boot loader is about te be started, driver overrides all boot (gBS) and runtime (gRT) services
#  with small wrappers that will call original plartform services and log each call (BootServices.c, RuntimeServices.c).
#
#  When ExitBootServices() is called driver will also print UEFI system table (with configuration tables)
#  and UEFI variables (RT vars).
#
#  Logging is done through PRINT definition (Common.h) which gets replaced by LogPrint() (Log.c).
#  Logs can be directed to screen, serial and disk file (LOG_TO_SCREEN, LOG_TO_SERIAL, LOG_TO_FILE in Common.h).
#
#  Logs to serial are interesting when used in VBox (VMWare?, QEmu?) because driver can continue to dump UEFI
#  calls even during runtime phase, after ExitBootServices() and when OS is running.
#  This requires WORK_DURING_RUNTIME to be enabled in Common.h. That is also a reason why is driver made as runtime driver.
#
#  Logs to screen and file work only up to ExitBootServices() because they depend on boot services to be running.
#
#  PRINT_SHELL_VARS in Common.h is set to 0 to avoid dumping of uninteresting shell vars data. Can be set to 1.
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = DumpUefiCalls
  FILE_GUID                  = B7F22AE1-9D87-4CD6-8EB1-171573908835
  MODULE_TYPE                = DXE_RUNTIME_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = DumpUefiCallsEntrypoint

[Packages.X64]
  MdePkg/MdePkg.dec
  IntelFrameworkPkg/IntelFrameworkPkg.dec
  Clover/CloverPkg.dec

[Binaries.X64]
  PE32|DumpUefiCalls.efi
  DXE_DEPEX|DumpUefiCalls.depex

[PatchPcd.X64]

[Protocols.X64]
  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiDevicePathProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiSimpleFileSystemProtocolGuid

  gEfiBlockIoProtocolGuid

  gEfiBlockIo2ProtocolGuid

  gEfiDiskIoProtocolGuid

  gEfiDiskIo2ProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiGraphicsOutputProtocolGuid

  gEfiDataHubProtocolGuid

  gEfiFirmwareVolumeProtocolGuid

  gAppleSMCProtocolGuid

  gAppleImageCodecProtocolGuid

  gAppleKeyStateProtocolGuid

  gEfiOSInfoProtocolGuid

  gAppleGraphConfigProtocolGuid

  gEfiKeyboardInfoProtocolGuid

  gAppleKeyMapDatabaseProtocolGuid

  gEfiSimplePointerProtocolGuid

  ## UNDEFINED
  gEfiDebugPortProtocolGuid

  ## SOMETIMES_PRODUCES
  gEfiDriverBindingProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiSimpleTextOutProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiHiiFontProtocolGuid

  ## SOMETIMES_CONSUMES # Consumes if gEfiGraphicsOutputProtocolGuid uninstalled
  gEfiUgaDrawProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiComponentNameProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiComponentName2ProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiDriverConfigurationProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiDriverConfiguration2ProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiDriverDiagnosticsProtocolGuid

  ## SOMETIMES_PRODUCES # User chooses to produce it
  gEfiDriverDiagnostics2ProtocolGuid


[Ppis.X64]

[Guids.X64]
  gEfiFileInfoGuid

  gEfiFileSystemInfoGuid

  gEfiFileSystemVolumeLabelInfoIdGuid

  gEfiEventVirtualAddressChangeGuid

  ## SOMETIMES_CONSUMES  ## SystemTable
  gEfiAcpi10TableGuid

  ## SOMETIMES_CONSUMES  ## SystemTable
  gEfiAcpi20TableGuid

  gEfiDebugImageInfoTableGuid

  gEfiDxeServicesTableGuid

  gEfiHobListGuid

  gEfiMpsTableGuid

  gEfiSmbiosTableGuid

  gEfiSmbios3TableGuid

  gEfiPartTypeSystemPartGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVTUTF8Guid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVT100Guid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVT100PlusGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiPcAnsiGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiUartDevicePathGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiSasDevicePathGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVirtualDiskGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVirtualCdGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiPersistentVirtualDiskGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiPersistentVirtualCdGuid

  ## SOMETIMES_CONSUMES  ## Event
  gEfiEventReadyToBootGuid

  ## SOMETIMES_CONSUMES  ## Event
  gEfiEventLegacyBootGuid

  ## SOMETIMES_CONSUMES  ## Variable
  gEfiGlobalVariableGuid


[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  MdePkg/Library/UefiMemoryAllocationLib/UefiMemoryAllocationLib.inf
#  MdePkg/Library/UefiDevicePathLib/UefiDevicePathLib.inf
#  MdePkg/Library/UefiRuntimeServicesTableLib/UefiRuntimeServicesTableLib.inf
#  MdePkg/Library/UefiLib/UefiLib.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf

[Depex.X64]
#  (TRUE) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = X64|IA32
#

[BuildOptions.X64]
## @AsBuilt
##   GCC:RELEASE_XCODE8_X64_VFR_FLAGS = -l -n
##   GCC:RELEASE_XCODE8_X64_PP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:RELEASE_XCODE8_X64_ASLCC_FLAGS = -x c -save-temps -g -O0 -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -c -include AutoGen.h
##   GCC:RELEASE_XCODE8_X64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:RELEASE_XCODE8_X64_OPTROM_FLAGS = -e
##   GCC:RELEASE_XCODE8_X64_MTOC_FLAGS = -align 0x20
##   GCC:RELEASE_XCODE8_X64_NASMB_FLAGS = -f bin
##   GCC:RELEASE_XCODE8_X64_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:RELEASE_XCODE8_X64_NASM_FLAGS = -f macho64
##   GCC:RELEASE_XCODE8_X64_GENFW_FLAGS = 
##   GCC:RELEASE_XCODE8_X64_APP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:RELEASE_XCODE8_X64_ASLDLINK_FLAGS = -nostdlib -Wl,-e,_ReferenceAcpiTable,-preload,-segalign,0x20,-pie,-seg1addr,0x240,-read_only_relocs,suppress,-map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map
##   GCC:RELEASE_XCODE8_X64_SLINK_FLAGS = -static -o
##   GCC:RELEASE_XCODE8_X64_DLINK_FLAGS = -arch x86_64 -nostdlib -Wl,-u,_$(IMAGE_ENTRY_POINT),-e,_$(IMAGE_ENTRY_POINT),-preload,-segalign,0x20,-pie,-all_load,-dead_strip,-seg1addr,0x240,-map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map
##   GCC:RELEASE_XCODE8_X64_DTC_FLAGS = -H epapr
##   GCC:RELEASE_XCODE8_X64_ASM_FLAGS = -c -x assembler -arch x86_64
##   GCC:RELEASE_XCODE8_X64_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE -include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:RELEASE_XCODE8_X64_DTCPP_FLAGS = -E -x assembler-with-cpp -imacros $(DEST_DIR_DEBUG)/AutoGen.h -nostdinc -undef
##   GCC:RELEASE_XCODE8_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:RELEASE_XCODE8_X64_OBJCOPY_FLAGS = objcopy not needed for
##   GCC:RELEASE_XCODE8_X64_CC_FLAGS = -c    -Os       -Wall -Werror -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare "-DEFIAPI=__attribute__((ms_abi))" -mno-red-zone -DMDEPKG_NDEBUG -fno-unwind-tables -Wno-msvc-include -Os -DMDEPKG_NDEBUG -DCLOVER_BUILD $(VBIOS_PATCH_CLOVEREFI_FLAG) $(ONLY_SATA_0_FLAG) -DUSE_BIOS_BLOCKIO -DDISABLE_USB_SUPPORT $(NOUDMA_FLAG) -DAMD_SUPPORT $(SECURE_BOOT_FLAG) -DANDX86 -DLODEPNG $(PS2MOUSE_LEGACYBOOT_FLAG) $(DEBUG_ON_SERIAL_PORT_FLAG) $(EXIT_USBKB_FLAG) $(DISABLE_LTO_FLAG)
##   GCC:RELEASE_XCODE8_X64_ASL_FLAGS = 
