#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   GNUmakefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = Clover
PLATFORM_GUID = 199E24E0-0989-42aa-87F2-611A8C397E72
PLATFORM_VERSION = 0.92
PLATFORM_RELATIVE_DIR = Clover
PLATFORM_DIR = /Users/weisiyuan/src/edk2/Clover
PLATFORM_OUTPUT_DIR = Build/Clover

#
# Module Macro Definition
#
MODULE_NAME = BaseMemoryLib
MODULE_GUID = fd44e603-002a-4b29-9f5f-529e815b6165
MODULE_NAME_GUID = BaseMemoryLib
MODULE_VERSION = 1.0
MODULE_TYPE = BASE
MODULE_FILE = BaseMemoryLib.inf
MODULE_FILE_BASE_NAME = BaseMemoryLib
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = MdePkg/Library/BaseMemoryLib
PACKAGE_RELATIVE_DIR = Library/BaseMemoryLib
MODULE_DIR = /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib
FFS_OUTPUT_DIR = /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/FV/Ffs/fd44e603-002a-4b29-9f5f-529e815b6165BaseMemoryLib

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = BaseMemoryLib
MODULE_UNI_FILE = BaseMemoryLib.uni
FILE_GUID = fd44e603-002a-4b29-9f5f-529e815b6165
MODULE_TYPE = BASE
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = X64
TOOLCHAIN = XCODE8
TOOLCHAIN_TAG = XCODE8
TARGET = RELEASE

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8
BUILD_DIR = /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8
BIN_DIR = $(BUILD_DIR)/X64
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib
OUTPUT_DIR = /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT
DEBUG_DIR = /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = cp -f
MV = mv -f
MD = mkdir -p
RM = rm -f
RD = rm -r -f


#
# Tools definitions specific to this module
#
VFR_BUILDRULEFAMILY =  XCODE
VFR_FLAGS = -l -n
VFR = VfrCompile

PP_BUILDRULEFAMILY =  XCODE
PP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
PP = clang

ASLCC_BUILDRULEFAMILY =  XCODE
ASLCC_FLAGS = -x c -save-temps -g -O0 -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -c -include AutoGen.h
ASLCC = clang

ASMLINK_BUILDRULEFAMILY =  XCODE
ASMLINK_FLAGS = /nologo /tiny
ASMLINK = C:\WINDDK\3790.1830\bin\bin16\link16.exe

OPTROM_BUILDRULEFAMILY =  XCODE
OPTROM_FLAGS = -e
OPTROM = EfiRom

MTOC_BUILDRULEFAMILY =  XCODE
MTOC_FLAGS = -align 0x20
MTOC = /Users/weisiyuan/src/opt/local/bin/mtoc.NEW

LZMAF86_BUILDRULEFAMILY =  XCODE
LZMAF86 = LzmaF86Compress
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889

NASMB_BUILDRULEFAMILY =  XCODE
NASMB_FLAGS = -f bin

PPPATH_BUILDRULEFAMILY =  XCODE

ARCHCC_BUILDRULEFAMILY =  XCODE

TIANO_BUILDRULEFAMILY =  XCODE
TIANO = TianoCompress
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779

ASLPP_BUILDRULEFAMILY =  XCODE
ASLPP_FLAGS = -x c -E -include AutoGen.h
ASLPP = clang

NASM_BUILDRULEFAMILY =  XCODE
NASM_FLAGS = -f macho64
NASM = /Users/weisiyuan/src/opt/local/bin/nasm

ASMPATH_BUILDRULEFAMILY =  XCODE

GENFW_BUILDRULEFAMILY =  XCODE
GENFW_FLAGS = 
GENFW = GenFw

DLINKPATH_BUILDRULEFAMILY =  XCODE

FROMELFPATH_BUILDRULEFAMILY =  XCODE

DSYMUTIL_BUILDRULEFAMILY =  XCODE
DSYMUTIL = /usr/bin/dsymutil

APP_BUILDRULEFAMILY =  XCODE
APP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h

MAKE = make

ASLDLINK_BUILDRULEFAMILY =  XCODE
ASLDLINK_FLAGS = -nostdlib -Wl,-e,_ReferenceAcpiTable,-preload,-segalign,0x20,-pie,-seg1addr,0x240,-read_only_relocs,suppress,-map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map
ASLDLINK = clang

ARCHDLINK_BUILDRULEFAMILY =  XCODE

LZMA_BUILDRULEFAMILY =  XCODE
LZMA = LzmaCompress
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF

GCCLINK_BUILDRULEFAMILY =  XCODE

FROMELF_BUILDRULEFAMILY =  XCODE

SLINK_BUILDRULEFAMILY =  XCODE
SLINK_FLAGS = -static -o
SLINK = libtool

PLATFORM_BUILDRULEFAMILY =  XCODE

CCPATH_BUILDRULEFAMILY =  XCODE

ARCHASM_BUILDRULEFAMILY =  XCODE

DLINK_BUILDRULEFAMILY =  XCODE
DLINK_FLAGS = -arch x86_64 -nostdlib -Wl,-u,_$(IMAGE_ENTRY_POINT),-e,_$(IMAGE_ENTRY_POINT),-preload,-segalign,0x20,-pie,-all_load,-dead_strip,-seg1addr,0x240,-map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map
DLINK = clang

VFRPPPATH_BUILDRULEFAMILY =  XCODE

STRIP_BUILDRULEFAMILY =  XCODE
STRIP = strip

RC_BUILDRULEFAMILY =  XCODE

DTC_BUILDRULEFAMILY =  XCODE
DTC_FLAGS = -H epapr
DTC = dtc

VPDTOOL_BUILDRULEFAMILY =  XCODE
VPDTOOL = BPDG
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08

ASM_BUILDRULEFAMILY =  XCODE
ASM_FLAGS = -c -x assembler -arch x86_64
ASM = clang

VFRPP_BUILDRULEFAMILY =  XCODE
VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE -include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
VFRPP = clang

DTCPP_BUILDRULEFAMILY =  XCODE
DTCPP_FLAGS = -E -x assembler-with-cpp -imacros $(DEST_DIR_DEBUG)/AutoGen.h -nostdinc -undef
DTCPP = cpp

RSA2048SHA256SIGN_BUILDRULEFAMILY =  XCODE
RSA2048SHA256SIGN = Rsa2048Sha256Sign
RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF

SYMRENAME_BUILDRULEFAMILY =  XCODE
SYMRENAME_FLAGS = Symbol renaming not needed for
SYMRENAME = echo

CRC32_BUILDRULEFAMILY =  XCODE
CRC32 = GenCrc32
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083

OBJCOPY_BUILDRULEFAMILY =  XCODE
OBJCOPY_FLAGS = objcopy not needed for
OBJCOPY = echo
OBJCOPY_ADDDEBUGFLAG =  

CC_BUILDRULEFAMILY =  XCODE
CC_FLAGS = -c -Os -Wall -Werror -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare "-DEFIAPI=__attribute__((ms_abi))" -mno-red-zone -fno-unwind-tables -Wno-msvc-include -Os -DMDEPKG_NDEBUG -DCLOVER_BUILD $(VBIOS_PATCH_CLOVEREFI_FLAG) $(ONLY_SATA_0_FLAG) -DUSE_BIOS_BLOCKIO -DDISABLE_USB_SUPPORT $(NOUDMA_FLAG) -DAMD_SUPPORT $(SECURE_BOOT_FLAG) -DANDX86 -DLODEPNG $(PS2MOUSE_LEGACYBOOT_FLAG) $(DEBUG_ON_SERIAL_PORT_FLAG) $(EXIT_USBKB_FLAG) $(DISABLE_LTO_FLAG)
CC = clang

ASM16_BUILDRULEFAMILY =  XCODE

ASL_BUILDRULEFAMILY =  XCODE
ASL_FLAGS = 
ASL = iasl
ASL_OUTFLAGS =  -p

SLINKPATH_BUILDRULEFAMILY =  XCODE


MAKE_FILE = $(MODULE_BUILD_DIR)/GNUmakefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)/SetMem.obj \
    $(OUTPUT_DIR)/ScanMem64Wrapper.obj \
    $(OUTPUT_DIR)/ScanMem32Wrapper.obj \
    $(OUTPUT_DIR)/ScanMem16Wrapper.obj \
    $(OUTPUT_DIR)/ScanMem8Wrapper.obj \
    $(OUTPUT_DIR)/ZeroMemWrapper.obj \
    $(OUTPUT_DIR)/CompareMemWrapper.obj \
    $(OUTPUT_DIR)/SetMem64Wrapper.obj \
    $(OUTPUT_DIR)/SetMem32Wrapper.obj \
    $(OUTPUT_DIR)/SetMem16Wrapper.obj \
    $(OUTPUT_DIR)/SetMemWrapper.obj \
    $(OUTPUT_DIR)/CopyMemWrapper.obj \
    $(OUTPUT_DIR)/IsZeroBufferWrapper.obj \
    $(OUTPUT_DIR)/MemLibGeneric.obj \
    $(OUTPUT_DIR)/MemLibGuid.obj \
    $(OUTPUT_DIR)/CopyMem.obj

INC =  \
    -I$(WORKSPACE)/MdePkg/Library/BaseMemoryLib \
    -I$(DEBUG_DIR) \
    -I$(WORKSPACE)/MdePkg \
    -I$(WORKSPACE)/MdePkg/Include \
    -I$(WORKSPACE)/MdePkg/Include/X64

OBJECT_FILES_LIST = /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/object_files.lst


COMMON_DEPS = $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/MemLibInternals.h \
              $(WORKSPACE)/MdePkg/Include/Library/BaseMemoryLib.h \
              $(WORKSPACE)/MdePkg/Include/Base.h \
              $(DEBUG_DIR)/AutoGen.h \
              $(WORKSPACE)/MdePkg/Include/X64/ProcessorBind.h \
              $(WORKSPACE)/MdePkg/Include/Library/DebugLib.h \
              $(WORKSPACE)/MdePkg/Include/Library/BaseLib.h \
              

#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/BaseMemoryLib.lib \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)/$(MODULE_FILE) [$(ARCH)]

dirs:
	-@$(MD) $(DEBUG_DIR)
	-@$(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)/AutoGen.h $(DEBUG_DIR)/$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)/GNUmakefile fds
	@cd $(MODULE_BUILD_DIR)

#
# Individual Object Build Targets
#
$(OUTPUT_DIR)/BaseMemoryLib.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)/BaseMemoryLib.lib : $(OBJECT_FILES_LIST)
	@"$(SLINK)" $(SLINK_FLAGS) /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/BaseMemoryLib.lib -filelist $(OBJECT_FILES_LIST)
	@"echo" [SLINK] $(MODULE_NAME)

$(OUTPUT_DIR)/ScanMem8Wrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/ScanMem8Wrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/ScanMem8Wrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/ScanMem8Wrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./ScanMem8Wrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/ScanMem8Wrapper.c
	@"echo" [CC] ScanMem8Wrapper

$(OUTPUT_DIR)/SetMem16Wrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/SetMem16Wrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/SetMem16Wrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/SetMem16Wrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./SetMem16Wrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/SetMem16Wrapper.c
	@"echo" [CC] SetMem16Wrapper

$(OUTPUT_DIR)/SetMem64Wrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/SetMem64Wrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/SetMem64Wrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/SetMem64Wrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./SetMem64Wrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/SetMem64Wrapper.c
	@"echo" [CC] SetMem64Wrapper

$(OUTPUT_DIR)/SetMem.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/SetMem.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/SetMem.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/SetMem.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./SetMem.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/SetMem.c
	@"echo" [CC] SetMem

$(OUTPUT_DIR)/ZeroMemWrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/ZeroMemWrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/ZeroMemWrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/ZeroMemWrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./ZeroMemWrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/ZeroMemWrapper.c
	@"echo" [CC] ZeroMemWrapper

$(OUTPUT_DIR)/ScanMem64Wrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/ScanMem64Wrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/ScanMem64Wrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/ScanMem64Wrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./ScanMem64Wrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/ScanMem64Wrapper.c
	@"echo" [CC] ScanMem64Wrapper

$(OUTPUT_DIR)/CompareMemWrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/CompareMemWrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/CompareMemWrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/CompareMemWrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./CompareMemWrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/CompareMemWrapper.c
	@"echo" [CC] CompareMemWrapper

$(OUTPUT_DIR)/CopyMem.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/CopyMem.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/CopyMem.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/CopyMem.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./CopyMem.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/CopyMem.c
	@"echo" [CC] CopyMem

$(OUTPUT_DIR)/IsZeroBufferWrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/IsZeroBufferWrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/IsZeroBufferWrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/IsZeroBufferWrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./IsZeroBufferWrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/IsZeroBufferWrapper.c
	@"echo" [CC] IsZeroBufferWrapper

$(OUTPUT_DIR)/ScanMem16Wrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/ScanMem16Wrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/ScanMem16Wrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/ScanMem16Wrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./ScanMem16Wrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/ScanMem16Wrapper.c
	@"echo" [CC] ScanMem16Wrapper

$(OUTPUT_DIR)/MemLibGuid.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/MemLibGuid.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/MemLibGuid.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/MemLibGuid.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./MemLibGuid.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/MemLibGuid.c
	@"echo" [CC] MemLibGuid

$(OUTPUT_DIR)/SetMemWrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/SetMemWrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/SetMemWrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/SetMemWrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./SetMemWrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/SetMemWrapper.c
	@"echo" [CC] SetMemWrapper

$(OUTPUT_DIR)/SetMem32Wrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/SetMem32Wrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/SetMem32Wrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/SetMem32Wrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./SetMem32Wrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/SetMem32Wrapper.c
	@"echo" [CC] SetMem32Wrapper

$(OUTPUT_DIR)/ScanMem32Wrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/ScanMem32Wrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/ScanMem32Wrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/ScanMem32Wrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./ScanMem32Wrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/ScanMem32Wrapper.c
	@"echo" [CC] ScanMem32Wrapper

$(OUTPUT_DIR)/MemLibGeneric.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/MemLibGeneric.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/MemLibGeneric.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/MemLibGeneric.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./MemLibGeneric.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/MemLibGeneric.c
	@"echo" [CC] MemLibGeneric

$(OUTPUT_DIR)/CopyMemWrapper.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/CopyMemWrapper.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/CopyMemWrapper.obj : $(WORKSPACE)/MdePkg/Library/BaseMemoryLib/CopyMemWrapper.c
	@"$(CC)" $(CC_FLAGS) -o /Users/weisiyuan/src/edk2/Build/Clover/RELEASE_XCODE8/X64/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/./CopyMemWrapper.obj $(INC) /Users/weisiyuan/src/edk2/MdePkg/Library/BaseMemoryLib/CopyMemWrapper.c
	@"echo" [CC] CopyMemWrapper



#
# clean all intermediate files
#
clean:
	$(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	$(RD) $(DEBUG_DIR)
	$(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)/$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	@cd $(MODULE_BUILD_DIR)

